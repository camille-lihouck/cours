#include <stdio.h>
#include <stdlib.h>
#define TABSIZE 10

int part_tab(int *tab, int end){
  int *pivot =tab;
  if (begin<end){
    if (*pivot>*(pivot+1)){
      int aux = *pivot;
      *pivot=*(pivot+1);
      *(pivot+1)=aux;
      return part_tab(tab+1,end);
    }
    else {
      int aux = *(pivot+1);
      *(pivot+1)=*(tab+end);
      *(tab+end)= aux;
      return part_tab(tab, end-1);
    }
  }
  return 0;
}

void part_all(int *tab, int begin, int end){
  if (begin<end){
    int pivot_position;
    pivot_position=part_tab(tab,begin,end);
    part_all(tab,begin,pivot_position-1);
    part_all(tab, pivot_position+1,end);
  }
}

void quicksort_int( int *tab, unsigned int nelem){
  part_all(tab,0,nelem-1);
}

void main(){
  int tableau[TABSIZE];
  int i;
  for (i=0; i<TABSIZE; i++){
    tableau[i]= (int)(rand()%100);
    printf("%d\n", tableau[i]);
  }
  printf("sorting");
  quicksort_int(tableau,TABSIZE);
  for (i=0; i<TABSIZE; i++){
    printf("%d\n", tableau[i]);
  }
}
